Python
======

./cgi/hes-verify-vote-cgi.py:43:    # Create a list of pairs from the form parameters. Don't use a dictionary
./cgi/hes-verify-vote-cgi.py:44:    # because that will overwrite recurring keys.
./cgi/hes-verify-vote-cgi.py:51:    # Only accept up to a single parameter
./cgi/hes-verify-vote-cgi.py:60:    # Only accept the POST_VERIFY_VOTE parameter.
./cgi/hes-verify-vote-cgi.py:65:    # Make sure the parameter is correctly formatted.
./cgi/hes-verify-vote-cgi.py:67:        # Don't write to disk; we don't know how large the value is
./cgi/hts-verify-vote-cgi.py:47:            # Don't write the values to disk; we don't know how large they are
./common/check_inputlists.py:30:        # no error
./common/config_common.py:124:    # HES & HTS
./common/evcommon.py:1:# log
./common/evcommon.py:28:# Serverite tüübid
./common/evcommon.py:34:# HTTP protokolli parameetrid
./common/evcommon.py:37:# Kliendi autentimissertifikaat sessioonis
./common/evcommon.py:39:# Info kliendi platvormi kohta sessioonis
./common/evcommon.py:42:# hääletamine
./common/evcommon.py:44:# isikukoodi järgi hääletamise fakti kontroll
./common/evcommon.py:46:# valijate nimekirjade failide kooskõlalisuse räsi
./common/evcommon.py:48:# sessiooniidentifikaator
./common/evcommon.py:51:# Mobiil-ID telefoni number
./common/evcommon.py:54:# Mobiil-ID sessioon
./common/evcommon.py:57:# Verification protocol
./common/evcommon.py:60:# VR <-> HES protokolli tagastusväärtused
./common/evcommon.py:61:# Samad koodid ka talletusprotokollis HES <-> HTS
./common/evcommon.py:63:# Positiivne vastuse lipp
./common/evcommon.py:65:# Vea lipp
./common/evcommon.py:67:# Kasutaja serdi vea lipp
./common/evcommon.py:69:# Kasutaja pole valijate nimekirjas
./common/evcommon.py:71:# Mobiil-ID ei ole veel vastust andnud
./common/evcommon.py:73:# Mobiil-ID sertifikaat ei ole hääletamiseks sobiv
./common/evcommon.py:75:# Mobiil-ID komponendi viga
./common/evcommon.py:79:# HES <-> HTS vaheliste protokollide väärtused
./common/evcommon.py:81:# EVOTE kooskõlalisuse protokolli tagastusväärtused
./common/evcommon.py:86:# EVOTE korduvhääletuse protokolli tagastusväärtused
./common/evcommon.py:92:# Verification protocol return values
./common/evcommon.py:111:# Logifailid
./common/evcommon.py:150:# konfigureerimist träkkivad lipud
./common/evcommon.py:161:# registri juurikas
./common/evlog.py:1:# log
./common/evlog.py:75:        # Üldvorming
./common/evlog.py:76:        # aeg 14*14DIGIT
./common/evlog.py:81:        # Hääle räsi 28*28BASE64-CHAR
./common/evlog.py:87:        # omavalitsuse-number 1*10DIGIT
./common/evlog.py:89:        # suhteline-ringkonna-number 1*10DIGIT
./common/evlog.py:91:        # omavalitsuse-number 1*10DIGIT
./common/evlog.py:93:        # suhteline-valimisjaoskonna-number 1*10DIGIT
./common/evlog.py:97:            #*1valija-andmed =
./common/evlog.py:98:            #isikukood 11*11DIGIT
./common/evlog.py:101:            # pohjus 1*100UTF-8-CHAR
./common/evlog.py:107:    # Currently we only check for personal code
./common/evlog.py:108:    # this can be extended to check anything
./common/evlog.py:111:        # Skip version, identifier and logtype
./common/evlog.py:118:    # Currently we only cache by personal code
./common/evlog.py:119:    # this can be extended to cache anything
./common/evlog.py:122:        # Skip version, identifier and logtype
./common/evlog.py:316:        #remove elid
./common/evlog.py:324:        #add elid
./common/evmessage.py:33:        # Siin hoitakse mäppuvana koodid ja stringid.
./common/evreg.py:1:# Registry
./common/evstrings.py:1:# Log
./common/evstrings.py:4:# NB! This file is auto generated by script makemessages.py. Any changes
./common/evstrings.py:5:# made to it will be overwritten when the script next updates this file.
./common/evstrings.py:12:# HESist väljaminevad mobiil-id veateated #
./common/evstrings.py:15:# Ei ole Mobiil-ID kasutaja
./common/evstrings.py:19:# Sertifikaat on tühistatud
./common/evstrings.py:23:# Ei ole Mobiil-ID kasutaja
./common/evstrings.py:27:# Sisemine viga
./common/evstrings.py:31:# Mobiil-ID ei olnud kasutamisvalmis
./common/evstrings.py:35:# Telefoniga ei saadud kontakti
./common/evstrings.py:39:# Ei ole lubatud e-hääletada selle sertifikaadiga
./common/evstrings.py:43:# Sõnumi saatmisel tekkis veaolukord
./common/evstrings.py:47:# SIM rakendus viskas erindi
./common/evstrings.py:51:# Viga igaks muuks juhtumiks
./common/evstrings.py:55:# Kasutaja katkestas tegevuse
./common/evstrings.py:60:# HESist väljaminevad veateated #
./common/evstrings.py:63:# Veateade, kui häälete saatja ja varem autenditud isikud ei lange kokku
./common/evstrings.py:67:# Veateade, kui hääletamine on juba lõppenud (ka HTSis)
./common/evstrings.py:71:# Veateade, kui hääletamist pole veel alustatud (ka HTSis)
./common/evstrings.py:75:# Veateade, kui HESi ja HTSi valijate nimekirjad pole kookõlalised (ka HTSis)
./common/evstrings.py:79:# Veateade, kui valija pole valimishetkel 18 aastane
./common/evstrings.py:83:# Veateade, kui valija isikukood ei kuulu valijate nimekirja
./common/evstrings.py:87:# Veateade, mis antakse verifyBESOffline abil
./common/evstrings.py:91:# Veateade, mis antakse digidoclib'i veale koodiga 81 (ERR_CERT_ISSUER)
./common/evstrings.py:95:# Veateade, kui tekkis miski sisemine tõrge
./common/evstrings.py:100:# HTSist väljaminevad veateated #
./common/evstrings.py:103:# Veateade, mis antakse digidoclib'i veale koodiga 109 (ERR_OCSP_TRYLATER)
./common/evstrings.py:107:# Veateade, kui tuvastatakse, et hääletaja siiski ei kuulu valijate nimekirja
./common/evstrings.py:111:# Veateade, mis antakse verifyBESOnline abil
./common/evstrings.py:115:# Internal error when issuing a vote ID for verification
./common/evstrings.py:119:# Veateade, kui hääle talletamisel tekkis sisemine viga
./common/evstrings.py:123:# Veateade, kui DigiDoci hääle verifitseerimine nurjus ja täpsemat veatedet ei selgunud
./common/evstrings.py:127:# Veateade, kui HESi ja HTSi valijate nimekirjade koosõlalisuse kontrollil tekkis sisemine viga
./common/evstrings.py:131:# Veateade, kui korduvhääletuse kontrollil tekkis sisemine viga
./common/evstrings.py:135:# Veateade, kui hääletaja on ületanud maksimaalselt lubatud häälte arvu ühe hääletaja kohta
./common/evstrings.py:139:# Veateade, kui HTSile esitati vigases vormingus päring
./common/evstrings.py:144:# Verification protocol errors #
./common/evstrings.py:147:# Error message shown when the query had too many or unknown parameters
./common/evstrings.py:151:# The verification vote ID has expired, reached it's maximum count or is otherwise invalid
./common/evstrings.py:155:# Error message given for internal errors during configuration loading
./common/evstrings.py:159:# Error message given for internal errors during vore verification
./common/inputlists.py:100:        #self.__elid
./common/inputlists.py:101:        #AppLog().log_error(err)
./common/inputlists.py:213:        # Eesti sisene jaoskonna kood on unikaalne
./common/inputlists.py:287:        # Kustutame vanad ringkondade ja jaoskondade nimekirjad, kui on.
./common/inputlists.py:802:        # Siin kontrollime hääletajate nimekirja kontrollimise lippu.
./common/inputlists.py:803:        # Kui lipp on tõene, siis hääletajate nimekirja ei kontrolli ning
./common/inputlists.py:804:        # lubame kõigil hääletada, vajalik VVK'le süsteemi testimiseks/demomiseks
./common/inputlists.py:858:        # Siin kontrollime hääletajate nimekirja kontrollimise lippu.
./common/inputlists.py:859:        # Kui lipp on tõene, siis hääletajate nimekirja ei kontrolli ning
./common/inputlists.py:860:        # hääletaja saab olema esimeses leitud ringkonnast.
./common/inputlists.py:905:    # Hetkel on tokend püsiv, s.t kui me lisame vaikeväärtusele midagi
./common/inputlists.py:906:    # (mida me ka teeme), siis on need muudatused ka järgmisel
./common/inputlists.py:907:    # vaikeväärtuse kasutusel alles.
./common/inputlists.py:937:                    # hääletusperioodi ajal omab tähendust tõkend
./common/makemessages.py:17:#groups
./common/makemessages.py:121:        #jagame read gruppidesse
./common/regrights.py:337:            # kirjeldus võib koosneda mitmest sõnast
./common/replace_candidates.py:50:        # HES & HLR
./common/sessionid.py:1:# Session identification
./common/show_voters_files_history.py:61:                        # nimekirja kokkulugemine
./common/show_voters_files_history.py:63:                        line = _rf.readline()      # päise 1. rida
./common/show_voters_files_history.py:64:                        line = _rf.readline()      # päise 2. rida
./common/show_voters_files_history.py:65:                        filetype = _rf.readline()  # päise 3. rida
./evui/burner.py:28:DVD_SIZE = 4400000000                   # DVD 4,7 GB peaks olema siis 4,4GiB'i.
./evui/burner.py:29:DVD_CHUNK_SIZE = 1024 * 1024 * 1024     # 1GiB
./evui/burner.py:84:        # Jagame jupid DVD'de kaupa kataloogidesse.
./evui/burner.py:197:        # Nüüd võime vana registri uue vastu vangerdada.
./evui/evui.py:93:# Konfi skriptid
./evui/evui.py:96:# Prorgammid
./evui/evui.py:100:# Faili actionid
./evui/evui.py:106:#Menüü pealkirjad
./evui/evui.py:110:#STR_NO =  "no"
./evui/evui.py:557:                # Kustutame kogu konfiguratsiooni ja ka olekupuu taastamise
./evui/evui.py:558:                # käigus alles hoitud vanad olekupuud.
./evui/evui.py:562:                #HLRi korral ka vastav mälufailisüsteemi kraam.
./evui/evui.py:568:                # Initsialiseerime nüüd ka liidese.
./evui/evui.py:587:    # Failidega seotud commandid
./evui/evui.py:684:                # Olukord, kus valimiste ID on, aga faile pole
./evui/evui.py:689:                # Kui on, siis ka vastav sha1 fail exporti
./evui/evui.py:740:        self.file_table = {}  # string : path
./evui/evui.py:772:    # Ignoreerime SIGTSTP, st. Ctrl+Z, Ctrl+C ja Aborti
./evui/evui.py:788:            # Siin püüame Ctrl+C kinni
./evui/evui.py:798:    # Kustutame ka CD-lt importimisel tekitatud ajutised failid
./evui/uiutil.py:19:# tab-completioni jaoks vajalikud moodulid
./evui/uiutil.py:281:    # Kuni sisestatakse "Enter"
./evui/uiutil.py:284:            # CTRL-D katkestab
./evui/uiutil.py:287:            # TAB-completion
./evui/uiutil.py:290:                # Autocomplete ei aita, pakume faile
./evui/uiutil.py:298:                # Autocomplete
./evui/uiutil.py:303:            # Backspacega kustutamine
./evui/uiutil.py:306:        #elif curses.ascii.isascii(ch) and curses.ascii.isprint(ch):
./evui/uiutil.py:308:            # Uue sümboli sisestamine
./evui/uiutil.py:314:    # Reavahetus lõppu
./evui/uiutil.py:324:    # et saaks õige kuvatava tähtede arvu
./evui/uiutil.py:329:        # vana seadistus
./evui/uiutil.py:348:    # et saaks õige kuvatava tähtede arvu
./evui/uiutil.py:359:    # vana seadistus
./evui/uiutil.py:369:            # Samm tagasi ja kirjutame üle, et kursor
./evui/uiutil.py:370:            # saaks õigele kohale
./evui/uiutil.py:411:    # vana seadistus
./evui/uiutil.py:416:        #ch = os.read(fd, 1)
./evui/uiutil.py:431:        # abi ainult fullpathi leidmisel
./evui/uiutil.py:513:    # PDF-iks teisendamine
./hes/birthday.py:18:    # tm_year, tm_mon, tm_mday, tm_hour, tm_min, tm_sec,
./hes/birthday.py:19:    # tm_wday, tm_yday, tm_isdst
./hes/birthday.py:27:    # aasta
./hes/birthday.py:34:    # kuu
./hes/birthday.py:36:    # p2ev
./hes/birthday.py:51:    # today[0] - birthday[0] == 18, v6rrelda kuup2evasid
./hes/birthday.py:57:    # today[1] == birthday[1], v6rrelda p2evasid
./hes/birthday.py:61:    # today[2] < birthday[2]. Isik pole veel t2naseks 18 saanud
./hes/birthday.py:62:    # (saab t2na v6i hiljem).
./hes/hes.py:151:        #Teeme veateate valmis. Kui viga ei ole, siis teadet ei vaadata
./hes/hesdisp.py:89:    # See tagastab kogu kraami utf8 kodeeringus
./hes/hesdisp.py:120:        # Kõik openssl'i poolt tagastatav info on juba õiges
./hes/hesdisp.py:121:        # kodeeringus
./hes/middisp.py:274:        # self.fp = open('/tmp/debug.out', 'a')
./hes/middisp.py:275:        # kw = { 'tracefile': self.fp }
./hes/middisp.py:406:        # 301 comes from MobileAuthenticate
./hes/middisp.py:407:        # 201 comes from GetMobileCertificate
./hes/middisp.py:408:        # both mean that the user is not MID client
./hes/vote_analyzer.py:17:    #   TODO: implement security checks
./hes/vote_analyzer.py:18:    #   such as verifying the correct size
./hes/vote_analyzer.py:19:    #   of the encrypted vote
./hlr/hlr.py:352:    # See on kataloom (mälufailisüsteem) kus vahetulemusi hoiame.
./hts/hts.py:78:        # Hääle tühistamisel on põhjuseks
./hts/hts.py:79:        # tühistamise põhjustanud hääle räsi
./hts/hts.py:131:                # logimine
./hts/hts.py:166:        # sortimine:
./hts/hts.py:167:        # Kov-jsk numbriliselt -> hääletajad ridade kaupa
./hts/hts.py:199:        # sortimine:
./hts/hts.py:200:        #  Maakond -> Vald -> Kov-jsk numbriliselt -> hääletajad ridade kaupa
./hts/hts.py:208:        # ReStructuredText jalus leheküljenumbritega
./hts/hts.py:209:        outfile.write(".. footer::\n\tLk ###Page###\n\n")
./hts/hts.py:262:        # jaoskonnad = {
./hts/hts.py:263:        #   'maakonna nimi': {
./hts/hts.py:264:        #      'vald': {
./hts/hts.py:265:        #         kov-jsk: ['jaoskonna string', [hääletajate list]]
./hts/hts.py:266:        #       }
./hts/hts.py:267:        #     }
./hts/hts.py:268:        #   }
./hts/hts.py:269:        #
./hts/hts.py:270:        # jaoskonnad_rev viitab otse jaoskondadele
./hts/htsall.py:167:                pass # No "otp" file
./hts/htsall.py:225:        # Store the election IDs and include a backreference in the
./hts/htsall.py:226:        # corresponding questions' subregistries.
./hts/htsall.py:276:        # check if valid vote ID
./hts/htsall.py:278:            # We don't know how large vote_id is, so don't write to disk
./hts/htsall.py:285:        # check if corresponding OTP exists
./hts/htsall.py:293:        # check if timestamp is OK
./hts/htsall.py:302:        # check if count is OK
./hts/htsall.py:341:        # load a random BDOC from the ones available
./hts/htsall.py:349:        # check consistency
./hts/htsall.py:357:        # create question objects
./hts/htsall.py:363:        # start assembling the response
./hts/htsall.py:366:        # append questions
./hts/htsall.py:371:        # append election IDs and votes
./hts/htsall.py:377:        # append voter
./hts/htsall.py:380:        # append choices list
./hts/htsalldisp.py:105:                #AppLog().log('HES ja HTS kooskõlalisuse kontroll: ALGUS')
./hts/htsalldisp.py:116:            #AppLog().log('HES ja HTS kooskõlalisuse kontroll: LõPP')
./hts/htsalldisp.py:178:                return evcommon.VERIFY_OK, "BLOB" # TODO msg-seadistus
./hts/htsrevoke.py:212:            # vajalik lugemisele minevate häälte nimistu koostamiseks
./pybdoc/python/bdocpythonutils.py:43:# DigiDocService's manifest is formatted differently than qdigidocclient's and
./pybdoc/python/bdocpythonutils.py:44:# ours, so it needs a separate reference.
./pybdoc/python/bdocpythonutils.py:212:        # NB! One URL gets into dict only once
./pybdoc/python/bdocpythonutils.py:271:            # DigiDocService has media-type and full-path swapped...
./pybdoc/python/bdocpythonutils.py:273:            # ...and a space before the closing bracket.

C++
===
./ivote-server/hlr/p11.cpp:185:	// Do nothing if no token name.
./ivote-server/hlr/p11.cpp:651:					// printf("%s: *** does not exist!!! ***\n");
./ivote-server/hlr/threaded_decrypt.cpp:272:		// Kui hääle dekrüptimine ei õnnestunud, siis paneme "xxx"
./ivote-server/hlr/threaded_decrypt.cpp:273:		// hääle asemele, mis kindlasti feilib ja läheb Log4.
./ivote-server/hlr/threaded_decrypt.cpp:415://	pthread_exit(NULL);
./ivote-server/pybdoc/src/BDoc.cpp:128:	std::auto_ptr<bdoc::Digest> docDigest; // only this scope
./ivote-server/pybdoc/src/CallStack.cpp:2:   License: BSD licence (http://www.opensource.org/licenses/bsd-license.php)
./ivote-server/pybdoc/src/CallStack.cpp:3:   Based on: http://stupefydeveloper.blogspot.com/2008/10/cc-call-stack.html */
./ivote-server/pybdoc/src/CallStack.cpp:45:			break; // skip last entries below main
./ivote-server/pybdoc/src/CallStack.cpp:57:} // namespace stacktrace
./ivote-server/pybdoc/src/ChallengeVerifierImpl.cpp:33:	// PKCS#1 DigestInfo ASN1, in case of obj-id sha1
./ivote-server/pybdoc/src/crypto/OCSP.cpp:206:	// Remove request pointer from scope, so that it will not be destroyed.
./ivote-server/pybdoc/src/crypto/OCSP.cpp:224:	// Check OCSP response status code.
./ivote-server/pybdoc/src/crypto/OCSP.cpp:250:	// NOINTERN is necessary because of a weird bug in cert verification
./ivote-server/pybdoc/src/crypto/OCSP.cpp:269:	// Return certificate status.
./ivote-server/pybdoc/src/crypto/OCSP.cpp:314:	X509_EXTENSION* resp_ext = OCSP_BASICRESP_get_ext(basic, resp_idx);// X509_EXTENSION_scope x509ExtScope(&resp_ext);
./ivote-server/pybdoc/src/crypto/OCSP.cpp:326:		&& (nonceAsn1[3] == r-4))//length is r-4
./ivote-server/pybdoc/src/crypto/OCSP.cpp:333:			&& (nonceAsn1[1] == r-2))//length is length - DER header len
./ivote-server/pybdoc/src/crypto/OCSP.cpp:362:	// Accept only GMT time.
./ivote-server/pybdoc/src/crypto/OCSP.cpp:373:	// Extract year.
./ivote-server/pybdoc/src/crypto/OCSP.cpp:376:	// Extract month.
./ivote-server/pybdoc/src/crypto/OCSP.cpp:382:	// Extract day.
./ivote-server/pybdoc/src/crypto/OCSP.cpp:388:	// Extract hour.
./ivote-server/pybdoc/src/crypto/OCSP.cpp:394:	// Extract minutes.
./ivote-server/pybdoc/src/crypto/OCSP.cpp:400:	// Extract seconds.
./ivote-server/pybdoc/src/crypto/X509Cert.cpp:95:	// Parse X.509 certificate from file.
./ivote-server/pybdoc/src/crypto/X509Cert.cpp:211:	// Read the converted string from buffer.
./ivote-server/pybdoc/src/crypto/X509CertStore.cpp:50:		// It is correct not to check retval
./ivote-server/pybdoc/src/DateTime.cpp:25:			/// Dedicated helper for converting xml-schema-style DateTyme into a Zulu-string.
./ivote-server/pybdoc/src/DateTime.cpp:26:			///
./ivote-server/pybdoc/src/DateTime.cpp:27:			/// @param time GMT time as code-synth xml-schema type.
./ivote-server/pybdoc/src/DateTime.cpp:28:			/// @return a string format of date-time e.g. "2007-12-25T14:06:01Z".
./ivote-server/pybdoc/src/DateTime.cpp:75:											 , 0 //zone +0h
./ivote-server/pybdoc/src/DateTime.cpp:76:											 , 0 ); //zone +0min
./ivote-server/pybdoc/src/Signature.cpp:34:					"http://uri.etsi.org/01903/v1.1.1#";
./ivote-server/pybdoc/src/Signature.cpp:37:					"http://uri.etsi.org/01903/v1.3.2#";
./ivote-server/pybdoc/src/Signature.cpp:40:					"http://www.w3.org/2000/09/xmldsig#";
./ivote-server/pybdoc/src/Signature.cpp:224://	   1. Check OCSP response (RevocationValues) was signed by OCSP server
./ivote-server/pybdoc/src/Signature.cpp:225://	   2. OCSP server certificate is trusted?
./ivote-server/pybdoc/src/Signature.cpp:226://	   3. Check that nonce field in OCSP response is same as
./ivote-server/pybdoc/src/Signature.cpp:227://					CompleteRevocationRefs->DigestValue
./ivote-server/pybdoc/src/Signature.cpp:228://	   4. Recalculate hash of signature and compare with nonce
./ivote-server/pybdoc/src/Signature.cpp:407:	// Parse Xerces DOM from file, to preserve the white spaces "as is"
./ivote-server/pybdoc/src/Signature.cpp:408:	// and get the same digest value on XML node.
./ivote-server/pybdoc/src/Signature.cpp:409:	// Canonical XML 1.0 specification
./ivote-server/pybdoc/src/Signature.cpp:410:	// (http://www.w3.org/TR/2001/REC-xml-c14n-20010315)
./ivote-server/pybdoc/src/Signature.cpp:411:	// needs all the white spaces from XML file "as is", otherwise the
./ivote-server/pybdoc/src/Signature.cpp:412:	// digests won't match. Therefore we have to use Xerces to parse the
./ivote-server/pybdoc/src/Signature.cpp:413:	// XML file each time a digest needs to be calculated on a XML node.
./ivote-server/pybdoc/src/Signature.cpp:414:	// If you are parsing XML files with a parser that doesn't preserve
./ivote-server/pybdoc/src/Signature.cpp:415:	// the white spaces you are DOOMED!
./ivote-server/pybdoc/src/Signature.cpp:418:	// Select node, on which the digest is calculated.
./ivote-server/pybdoc/src/Signature.cpp:440:	// Canocalize XML using one of the three methods supported by XML-DSIG
./ivote-server/pybdoc/src/Signature.cpp:445:	// Find the method identifier
./ivote-server/pybdoc/src/Signature.cpp:453:	// Set processing flags according to algorithm type.
./ivote-server/pybdoc/src/Signature.cpp:455:		// Default behaviour, nothing needs to be changed
./ivote-server/pybdoc/src/Signature.cpp:461:	// Exclusive mode needs to include xml-dsig in root element
./ivote-server/pybdoc/src/Signature.cpp:462:	// in order to maintain compatibility with existing implementations
./ivote-server/pybdoc/src/Signature.cpp:480://	std::string out;
./ivote-server/pybdoc/src/Signature.cpp:485://		out += std::string((char *)buffer, bytes);
./ivote-server/pybdoc/src/Signature.cpp:488://	std::cout << out << std::endl;
./ivote-server/pybdoc/src/Signature.cpp:636:		// we require exactly one ref to every document,
./ivote-server/pybdoc/src/Signature.cpp:637:		// plus one ref to the SignedProperties
./ivote-server/pybdoc/src/Signature.cpp:651:			// the one and only reference to SignedProperties
./ivote-server/pybdoc/src/Signature.cpp:703:		//BDOC-1.0 spec says that value must be
./ivote-server/pybdoc/src/Signature.cpp:704:		//"http://uri.etsi.org/01903#SignedProperties",
./ivote-server/pybdoc/src/Signature.cpp:705:		//but Xades wants value in format
./ivote-server/pybdoc/src/Signature.cpp:706:		//http://uri.etsi.org/01903/vX.Y.Z/#SignedProperties,
./ivote-server/pybdoc/src/Signature.cpp:707:		//where  X.Y.Z is Xades version
./ivote-server/pybdoc/src/Signature.cpp:708:		//Try to support all possible values
./ivote-server/pybdoc/src/Signature.cpp:710:		if ((typeAttr.find("http://uri.etsi.org/01903") == 0)
./ivote-server/pybdoc/src/Signature.cpp:785:			// file names in manifest do not have '/' at front
./ivote-server/pybdoc/src/Signature.cpp:817:	// Get hash method URI from signature method URI.

Useful block comments

base64.cpp
            /* Replace characters in output stream with "=" pad
             * characters if fewer than three characters were
             * read from the end of the input stream. */
OCSP.cpp
/**
 * Extract date time value from ASN1_GENERALIZEDTIME struct.
 *
 * @param asn1Time ASN.1 generalized time struct.
 * @return returned extracted time.
 * @throws Exception exception is throws if the time is in incorrect format.
 */
